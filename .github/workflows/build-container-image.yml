name: Build and publish container image

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish-image-amd64:
    runs-on: ubuntu-latest
    environment: Container deploy
    permissions:
        contents: read
        packages: write
        id-token: write

    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Get Repo Owner
          id: get_repo_owner
          run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" > $GITHUB_ENV

        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@v6
          with:
            outputs: "type=registry,push=true"
            platforms: linux/amd64
            context: .
            provenance: false
            push: true
            labels: ${{ steps.meta.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            tags: |
              ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:${{ github.sha }}-amd64

  publish-image-arm64:
    runs-on: ubuntu-24.04-arm
    environment: Container deploy
    permissions:
        contents: read
        packages: write
        id-token: write

    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Get Repo Owner
          id: get_repo_owner
          run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" > $GITHUB_ENV

        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@v6
          with:
            outputs: "type=registry,push=true"
            platforms: linux/arm64
            context: .
            provenance: false
            push: true
            labels: ${{ steps.meta.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            tags: |
              ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:${{ github.sha }}-aarch64
        
  publish_manifest:
    environment: Container deploy
    permissions:
        contents: read
        packages: write
        id-token: write
    runs-on: ubuntu-latest
    needs: [publish-image-amd64, publish-image-arm64]
    steps:

    - name: Get Repo Owner
      id: get_repo_owner
      run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" > $GITHUB_ENV

    - name: Login to container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io

    - name: Create manifest
      run: |
        docker manifest create ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:master \
          --amend ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:${{ github.sha }}-amd64 \
          --amend ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:${{ github.sha }}-aarch64
        docker manifest annotate --arch amd64 --os linux ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:master ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:${{ github.sha }}-amd64
        docker manifest annotate --arch arm64 --os linux ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:master ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:${{ github.sha }}-aarch64
        docker manifest inspect ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:master

        docker manifest push ghcr.io/${{ env.REPO_OWNER }}/wavebreaker-rs:master

    - shell: bash
      env:
        WATCHTOWER_URL: ${{ secrets.WATCHTOWER_URL }}
        WATCHTOWER_KEY: ${{ secrets.WATCHTOWER_KEY }}
      run: |
        curl -H "Authorization: Bearer $WATCHTOWER_KEY" $WATCHTOWER_URL
