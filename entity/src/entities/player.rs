//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "User")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub username: String,
    #[sea_orm(column_type = "Text")]
    pub steamid64: String,
    pub steamid32: i32,
    pub locationid: i32,
    pub account_type: i32,
    pub joined_at: DateTime,
    #[sea_orm(column_type = "Text", nullable)]
    pub avatar_url: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub avatar_url_medium: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub avatar_url_small: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::score::Entity")]
    Score,
    #[sea_orm(has_many = "super::shout::Entity")]
    Shout,
}

impl Related<super::score::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Score.def()
    }
}

impl Related<super::shout::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Shout.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
